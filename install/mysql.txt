DROP TABLE IF EXISTS blacklisted_ips;
#
CREATE TABLE blacklisted_ips (
  ipaddress 	varchar(20) NOT NULL,
  lastfound 	datetime DEFAULT NULL,
  PRIMARY KEY (ipaddress)
); 
#
DROP TABLE IF EXISTS bloglabel;
#
CREATE TABLE bloglabel (
  bloglabelid 		char(35) NOT NULL,
  bloglabelname 	varchar(20) DEFAULT NULL,
  bloguser 			int(11) NOT NULL,
  created 			datetime DEFAULT NULL,
  lastupdated 		datetime DEFAULT NULL,
  updatedby 		int(11) DEFAULT NULL,
  valid 			bit(1) DEFAULT b'1',
  PRIMARY KEY (bloglabelid)
);
#
DROP TABLE IF EXISTS blogpost;
#
CREATE TABLE blogpost (
  blogpostid 		bigint(20) NOT NULL AUTO_INCREMENT,
  blogpostname 		varchar(400) NOT NULL,
  smalldes 			varchar(500) DEFAULT NULL,
  url 				varchar(160) DEFAULT NULL,
  blog 				longtext,
  comment 			tinyint(1) DEFAULT NULL,
  demourl 			varchar(500) DEFAULT NULL,
  bloguser			int(11) NOT NULL,
  pagetype 			bigint(20) DEFAULT NULL COMMENT '1 = blogpost, 2 = pages',
  pageviews 		tinyint(1) DEFAULT '0',
  sticky 			bit(1) DEFAULT  b'0',
  orderby 			int(11) DEFAULT NULL,
  valid 			bit(1) DEFAULT b'1',
  created 			datetime DEFAULT NULL,
  lastupdated 		datetime DEFAULT NULL,
  updatedby 		int(11) DEFAULT NULL,
  publisheddate 	datetime DEFAULT NULL,
  mblogpostid 		bigint(20) DEFAULT '0',
  PRIMARY KEY (blogpostid) 
);
#
CREATE INDEX blogpost_ix_created ON blogpost (created);
#
CREATE INDEX blogpost_ix_pagetype ON blogpost (pagetype);
#
CREATE INDEX blogpost_ix_valid ON blogpost (valid);
#
DROP TABLE IF EXISTS blogpost_bloglabel;
#
CREATE TABLE blogpost_bloglabel (
  blogpostid 		bigint(20) NOT NULL AUTO_INCREMENT,
  bloglabelid 		char(35) NOT NULL,
  PRIMARY KEY (blogpostid,bloglabelid)
);
#
DROP TABLE IF EXISTS bloguser;
#
CREATE TABLE bloguser (
  bloguserid 		int(11) NOT NULL AUTO_INCREMENT,
  blogusername 		varchar(20) NOT NULL,
  username 			varchar(20) NOT NULL,
  email 			varchar(40) NOT NULL,
  password 			varchar(64) NOT NULL,
  salt	 			varchar(35) NOT NULL,
  description 		varchar(500) DEFAULT NULL,
  retrycount 		tinyint(1) DEFAULT '0',
  unlockkey			varchar(64) DEFAULT NULL,
  cookiekey			char(35) NOT NULL,
  valid 			bit(1) DEFAULT b'1',
  createdate 		datetime DEFAULT NULL,
  lastupdated 		datetime DEFAULT NULL,
  createdby 		int(11) DEFAULT NULL,
  updatedby 		int(11) DEFAULT NULL,
  PRIMARY KEY (bloguserid)
);
#
DROP TABLE IF EXISTS comments;
#
CREATE TABLE comments (
  commentid 		char(35) NOT NULL,
  blogpostid 		int(11) DEFAULT NULL,
  mcommentid 		char(35) DEFAULT NULL,
  comments 			longtext,
  name 				varchar(50) DEFAULT NULL,
  email 			varchar(50) DEFAULT NULL,
  website 			varchar(100) DEFAULT NULL,
  created 			datetime DEFAULT NULL,
  valid 			bit(1) DEFAULT b'1',
  publish 			tinyint(1) DEFAULT NULL,
  uid 				char(35) DEFAULT NULL,
  subscribe 		bit(1) DEFAULT NULL,
  followup 			bit(1) DEFAULT NULL,
  ipaddress 		varchar(20) DEFAULT NULL,
  PRIMARY KEY (commentid) 
);
#
CREATE INDEX comments_ix_uid ON comments (uid);
#
DROP TABLE IF EXISTS downloadcount;
#
CREATE TABLE downloadcount (
  downloadcountid	char(35) NOT NULL,
  blogpostid 	int(11) DEFAULT NULL,
  filename 		varchar(50) DEFAULT NULL,
  downloads 	int(11) DEFAULT NULL,
  PRIMARY KEY (downloadcountid)
);
#
CREATE INDEX downloadcount_ix_filename ON downloadcount (filename);
#
DROP TABLE IF EXISTS externallink;
#
CREATE TABLE externallink (
  externallinkID	char(35) NOT NULL,
  blogpostID 		bigint(20) DEFAULT NULL,
  externallinkName 	varchar(500) DEFAULT NULL,
  externallinkURL 	varchar(500) DEFAULT NULL,
  valid 			bit(1) DEFAULT b'1',
  created 			datetime DEFAULT NULL,
  lastupdated 		datetime DEFAULT NULL,
  updatedBy 		int(11) DEFAULT NULL,
  PRIMARY KEY (externallinkID)
);
#
DROP TABLE IF EXISTS links;
#
CREATE TABLE links (
  linksid 		char(35) NOT NULL,
  linksname 	varchar(100) DEFAULT NULL,
  link 			varchar(500) DEFAULT NULL,
  note 			varchar(100) DEFAULT NULL,
  displayorder 	tinyint(2) DEFAULT NULL,
  created 		datetime DEFAULT NULL,
  lastupdated 	datetime DEFAULT NULL,
  updatedby 	int(11) DEFAULT NULL,
  valid 		bit(1) DEFAULT b'1',
  PRIMARY KEY (linksid)
);